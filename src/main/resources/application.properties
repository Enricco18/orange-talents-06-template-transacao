spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/transacao}
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASS:root}
spring.jpa.hibernate.ddl-auto=update
transaction.topic.name=transacoes

keycloak.auth-server-url=${AUTH_URL:http://localhost:18080/auth}
keycloak.realm=${AUTH_REALM:Proposta}
keycloak.resource=${AUTH_RESOURCE:proposta-app}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWK_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}


# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:minha-aplicacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}
